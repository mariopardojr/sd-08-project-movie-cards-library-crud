[{"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/App.js":"1","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/index.js":"2","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/MovieList.js":"3","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/EditMovie.js":"4","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/MovieDetails.js":"5","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/NewMovie.js":"6","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/NotFound.js":"7","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/components/MovieForm.js":"8","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/components/MovieCard.js":"9","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/services/movieAPI.js":"10","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/components/index.js":"11","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/components/Loading.js":"12"},{"size":761,"mtime":1611865765831,"results":"13","hashOfConfig":"14"},{"size":262,"mtime":1611612922681,"results":"15","hashOfConfig":"14"},{"size":671,"mtime":1611851522785,"results":"16","hashOfConfig":"14"},{"size":687,"mtime":1611851522784,"results":"17","hashOfConfig":"14"},{"size":921,"mtime":1611851522784,"results":"18","hashOfConfig":"14"},{"size":476,"mtime":1611851522785,"results":"19","hashOfConfig":"14"},{"size":194,"mtime":1611612922681,"results":"20","hashOfConfig":"14"},{"size":3821,"mtime":1611851522783,"results":"21","hashOfConfig":"14"},{"size":688,"mtime":1611851522782,"results":"22","hashOfConfig":"14"},{"size":2098,"mtime":1611855909196,"results":"23","hashOfConfig":"14"},{"size":152,"mtime":1611612922679,"results":"24","hashOfConfig":"14"},{"size":172,"mtime":1611836953600,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l042yh",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/App.js",[],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/index.js",[],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/MovieList.js",["54"],"import React, { Component } from 'react';\nimport MovieCard from '../components/MovieCard';\n\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    // Render Loading here if the request is still happening\n\n    return (\n      <div data-testid=\"movie-list\">\n        {movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />)}\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n",["55","56","57","58","59","60"],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/EditMovie.js",["61","62"],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/MovieDetails.js",["63","64","65"],"import React, { Component } from 'react';\n\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n\n    const { title, storyline, imagePath, genre, rating, subtitle } = {};\n\n    return (\n      <div data-testid=\"movie-details\">\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n        <p>{ `Subtitle: ${subtitle}` }</p>\n        <p>{ `Storyline: ${storyline}` }</p>\n        <p>{ `Genre: ${genre}` }</p>\n        <p>{ `Rating: ${rating}` }</p>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/NewMovie.js",["66","67"],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/pages/NotFound.js",[],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/components/MovieForm.js",["68","69","70"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.movie };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { onSubmit } = this.props;\n    onSubmit(this.state);\n  }\n\n  updateMovie(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  renderTitleInput() {\n    const { title } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_title\">\n          <input\n            placeholder=\"Insira o título\"\n            id=\"movie_title\"\n            type=\"text\"\n            className=\"validate\"\n            value={ title }\n            onChange={ (event) => this.updateMovie('title', event.target.value) }\n          />\n          Título\n        </label>\n      </div>\n    );\n  }\n\n  renderSubtitleInput() {\n    const { subtitle } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_subtitle\">\n          <input\n            placeholder=\"Insira o subtítulo\"\n            id=\"movie_subtitle\"\n            type=\"text\"\n            value={ subtitle }\n            onChange={ (event) => this.updateMovie('subtitle', event.target.value) }\n          />\n          Subtítulo\n        </label>\n      </div>\n    );\n  }\n\n  renderImagePathInput() {\n    const { imagePath } = this.state;\n\n    return (\n      <div className=\"row\">\n        <label htmlFor=\"movie_image\">\n          <input\n            placeholder=\"Insira o caminho da imagem\"\n            id=\"movie_image\"\n            type=\"text\"\n            value={ imagePath }\n            onChange={ (event) => this.updateMovie('imagePath', event.target.value) }\n          />\n          Imagem\n        </label>\n      </div>\n    );\n  }\n\n  renderStorylineInput() {\n    const { storyline } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_storyline\">\n          <textarea\n            id=\"movie_storyline\"\n            value={ storyline }\n            onChange={ (event) => this.updateMovie('storyline', event.target.value) }\n          />\n          Sinopse\n        </label>\n      </div>\n    );\n  }\n\n  renderGenreSelection() {\n    const { genre } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"movie_genre\">\n          Gênero\n          <select\n            id=\"movie_genre\"\n            value={ genre }\n            onChange={ (event) => this.updateMovie('genre', event.target.value) }\n          >\n            <option value=\"action\">Ação</option>\n            <option value=\"comedy\">Comédia</option>\n            <option value=\"thriller\">Suspense</option>\n            <option value=\"fantasy\">Fantasia</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n\n  renderRatingInput() {\n    const { rating } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"movie_rating\">\n          <input\n            placeholder=\"Dê a avaliação do filme\"\n            id=\"movie_rating\"\n            type=\"number\"\n            step={ 0.1 }\n            min={ 0 }\n            max={ 5 }\n            value={ rating }\n            onChange={ (event) => this.updateMovie('rating', event.target.value) }\n          />\n          Avaliação\n        </label>\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onClick={ this.handleSubmit }\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          {this.renderTitleInput()}\n          {this.renderSubtitleInput()}\n          {this.renderImagePathInput()}\n          {this.renderStorylineInput()}\n          {this.renderGenreSelection()}\n          {this.renderRatingInput()}\n          {this.renderSubmitButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/components/MovieCard.js",[],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/services/movieAPI.js",[],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/components/index.js",[],"/media/rafael/ARQUIVOS/Trybe/movie-cards-library-CRUD/src/components/Loading.js",[],{"ruleId":"71","severity":2,"message":"72","line":4,"column":13,"nodeType":"73","messageId":"74","endLine":4,"endColumn":21},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"71","severity":2,"message":"72","line":4,"column":13,"nodeType":"73","messageId":"74","endLine":4,"endColumn":21},{"ruleId":"71","severity":2,"message":"87","line":13,"column":16,"nodeType":"73","messageId":"74","endLine":13,"endColumn":28},{"ruleId":"71","severity":2,"message":"72","line":3,"column":13,"nodeType":"73","messageId":"74","endLine":3,"endColumn":21},{"ruleId":"71","severity":2,"message":"88","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":17},{"ruleId":"71","severity":2,"message":"89","line":11,"column":13,"nodeType":"73","messageId":"74","endLine":11,"endColumn":18},{"ruleId":"71","severity":2,"message":"72","line":4,"column":13,"nodeType":"73","messageId":"74","endLine":4,"endColumn":21},{"ruleId":"71","severity":2,"message":"90","line":12,"column":16,"nodeType":"73","messageId":"74","endLine":12,"endColumn":24},{"ruleId":"71","severity":2,"message":"91","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":17},{"ruleId":"92","severity":2,"message":"93","line":7,"column":29,"nodeType":"73","endLine":7,"endColumn":34},{"ruleId":"92","severity":2,"message":"94","line":12,"column":13,"nodeType":"95","endLine":12,"endColumn":21},"no-unused-vars","'movieAPI' is defined but never used.","Identifier","unusedVar","lines-around-directive",["96"],"no-spaced-func",["97"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'updatedMovie' is defined but never used.","'Loading' is defined but never used.","'title' is assigned a value but never used.","'newMovie' is defined but never used.","'PropTypes' is defined but never used.","react/prop-types","'movie' is missing in props validation","'onSubmit' is missing in props validation","Property","padding-line-between-statements","func-call-spacing"]